{"version":3,"sources":["util/Spotify.js","Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["accessToken","SearchBar","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","search","bind","assertThisInitialized","handleTermChange","inherits","createClass","key","value","onSearch","event","setState","target","react_default","a","createElement","className","placeholder","onChange","onClick","React","Component","Track","addTrack","removeTrack","isRemoval","onAdd","track","onRemove","name","artist","album","renderAction","TrackList","apply","arguments","tracks","map","Components_Track_Track","id","SearchResults","Components_TrackList_TrackList","searchResults","Playlist","handleNameChange","onNameChange","defaultValue","playlistTracks","onSave","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","concat","fetch","headers","Authorization","then","response","json","jsonResponse","items","artists","uri","savePlaylist","trackUris","length","userId","method","body","JSON","stringify","playlistId","uris","App","playlistName","updatePlaylistName","find","savedTrack","push","filter","currentTrack","_this2","_this3","Components_SearchBar_SearchBar","Components_SearchResults_SearchResults","Components_Playlist_Playlist","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","Components_App_App"],"mappings":"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","file":"static/js/main.2f9a6d0d.chunk.js","sourcesContent":["const clientId = \"f70aff13e5bb434d802c8b3a29c1360e\";\n\nconst redirectUri = \"https://scottpickering31.github.io/scottify-app/\";\nlet accessToken;\n\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    }\n\n    // check for access token match\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n\n    if (accessTokenMatch && expiresInMatch) {\n      accessToken = accessTokenMatch[1];\n      const expiresIn = Number(expiresInMatch[1]);\n\n      window.setTimeout(() => (accessToken = \"\"), expiresIn * 1000);\n      window.history.pushState(\"Access Token\", null, \"/\");\n      return accessToken;\n    } else {\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\n      window.location = accessUrl;\n    }\n  },\n  search(term) {\n    const accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((jsonResponse) => {\n        if (!jsonResponse.tracks) {\n          return [];\n        }\n        return jsonResponse.tracks.items.map((track) => ({\n          id: track.id,\n          name: track.name,\n          artist: track.artists[0].name,\n          album: track.album.name,\n          uri: track.uri,\n        }));\n      });\n  },\n\n  savePlaylist(name, trackUris) {\n    if (!name || !trackUris.length) {\n      return;\n    }\n\n    const accessToken = Spotify.getAccessToken();\n    const headers = { Authorization: `Bearer ${accessToken}` };\n    let userId;\n\n    return fetch(\"https://api.spotify.com/v1/me\", {\n      headers: headers,\n    })\n      .then((response) => response.json())\n      .then((jsonResponse) => {\n        userId = jsonResponse.id;\n        return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n          headers: headers,\n          method: \"POST\",\n          body: JSON.stringify({ name: name }),\n        })\n          .then((response) => response.json())\n          .then((jsonResponse) => {\n            const playlistId = jsonResponse.id;\n\n            return fetch(\n              `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,\n              {\n                headers: headers,\n                method: \"POST\",\n                body: JSON.stringify({ uris: trackUris }),\n              }\n            );\n          });\n      });\n  },\n};\n\nexport default Spotify;\n","import React from \"react\";\nimport \"./SearchBar.css\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: \"\",\n    };\n    this.search = this.search.bind(this);\n    this.handleTermChange = this.handleTermChange.bind(this);\n  }\n  search() {\n    this.props.onSearch(this.state.term);\n  }\n  handleTermChange(event) {\n    this.setState({ term: event.target.value });\n  }\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <input\n          placeholder=\"Enter A Song, Album, or Artist\"\n          onChange={this.handleTermChange}\n        />\n        <button className=\"SearchButton\" onClick={this.search}>\n          SEARCH\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","// import { toHaveStyle } from \"@testing-library/jest-dom/dist/matchers\";\nimport React from \"react\";\nimport \"./Track.css\";\n\nclass Track extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n  }\n  renderAction() {\n    if (this.props.isRemoval) {\n      return (\n        <button className=\"Track-action\" onClick={this.removeTrack}>\n          -\n        </button>\n      );\n    } else {\n      return (\n        <button className=\"Track-action\" onClick={this.addTrack}>\n          +\n        </button>\n      );\n    }\n  }\n\n  addTrack() {\n    this.props.onAdd(this.props.track);\n  }\n\n  removeTrack() {\n    this.props.onRemove(this.props.track);\n  }\n\n  render() {\n    return (\n      <div className=\"Track\">\n        <div className=\"Track-information\">\n          <h3>{this.props.track.name}</h3>\n          <p>\n            {this.props.track.artist} | {this.props.track.album}\n          </p>\n        </div>\n        {this.renderAction()}\n      </div>\n    );\n  }\n}\n\nexport default Track;\n","import React from \"react\";\nimport \"./TrackList.css\";\n\nimport Track from \"../Track/Track\";\n\nclass TrackList extends React.Component {\n  render() {\n    return (\n      <div className=\"TrackList\">\n        {this.props.tracks.map((track) => {\n          return (\n            <Track\n              track={track}\n              key={track.id}\n              onAdd={this.props.onAdd}\n              onRemove={this.props.onRemove}\n              isRemoval={this.props.isRemoval}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default TrackList;\n","import React from \"react\";\nimport \"./SearchResults.css\";\n\nimport TrackList from \"../TrackList/TrackList\";\n\nclass SearchResults extends React.Component {\n  render() {\n    return (\n      <div className=\"SearchResults\">\n        <h2>Results</h2>\n        <TrackList\n          tracks={this.props.searchResults}\n          onAdd={this.props.onAdd}\n          isRemoval={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SearchResults;\n","import React from \"react\";\nimport \"./Playlist.css\";\n\nimport TrackList from \"../TrackList/TrackList\";\n\nclass Playlist extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n  handleNameChange(event) {\n    this.props.onNameChange(event.target.value);\n  }\n  render() {\n    return (\n      <div className=\"Playlist\">\n        <input defaultValue={\"New Playlist\"} onChange={this.handleNameChange} />\n        <TrackList\n          tracks={this.props.playlistTracks}\n          onRemove={this.props.onRemove}\n          isRemoval={true}\n        />\n        <button className=\"Playlist-save\" onClick={this.props.onSave}>\n          SAVE TO SPOTIFY\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Playlist;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport SearchResults from \"../SearchResults/SearchResults\";\nimport Playlist from \"../Playlist/Playlist\";\nimport Spotify from \"../../util/Spotify\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: \"My Playlist\",\n      playlistTracks: [],\n    };\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    if (tracks.find((savedTrack) => savedTrack.id === track.id)) {\n      return;\n    }\n    tracks.push(track);\n    this.setState({ playlistTracks: tracks });\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter((currentTrack) => currentTrack.id !== track.id);\n    this.setState({ playlistTracks: tracks });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({ playlistName: name });\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map((track) => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({\n        playlistName: \"New Playlist\",\n        playlistTracks: [],\n      });\n    });\n  }\n\n  search(term) {\n    Spotify.search(term).then((searchResults) => {\n      this.setState({ searchResults: searchResults });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>\n          SC<span className=\"highlight\">OTT</span>IFY\n        </h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults\n              searchResults={this.state.searchResults}\n              onAdd={this.addTrack}\n            />\n            <Playlist\n              playlistName={this.state.playlistName}\n              playlistTracks={this.state.playlistTracks}\n              onRemove={this.removeTrack}\n              onNameChange={this.updatePlaylistName}\n              onSave={this.savePlaylist}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}